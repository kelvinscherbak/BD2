
-- atualização de estoque na inserção
DELIMITER // 
CREATE TRIGGER atualiza_estoque
AFTER INSERT ON item_venda FOR EACH ROW
BEGIN 
	UPDATE produto SET estoque = estoque - new.quantidade WHERE produto.id = new.produto_id;
END;
//
DELIMITER ;

-- impedir a venda fora do horario comercial
DELIMITER // 
CREATE TRIGGER venda_horario_comercial
BEFORE INSERT ON venda FOR EACH ROW
-- FOLLOWS impedir_venda_cliente_inativo
BEGIN 
    IF NOT TIME(current_timestamp) between TIME('08:00:00') and TIME('18:00:00') THEN
		signal sqlstate '45000' set message_text = 'horário não permitido';
	END IF;
END;
//
DELIMITER ;

-- realizar a insersão de uma venda e atualizar o estoque
DELIMITER //
CREATE PROCEDURE insercao_item_venda(id_produto INT, id_venda INT, quantidade INT, preco_unidade DECIMAL(8,2))
BEGIN
    INSERT INTO item_venda (produto_id,venda_id,quantidade,preco_unidade) VALUES 
    (id_produto, id_venda, quantidade, preco_unidade);
    UPDATE produto SET estoque = (estoque - quantidade) WHERE produto.id = id_produto;
END;
//
DELIMITER ;

-- inserir uma venda, caso cliente seja inativo gerar erro.
DELIMITER //
CREATE PROCEDURE insercao_venda (id_cliente INT)
BEGIN
    DECLARE ativo CHAR; 
    SELECT cliente.ativo INTO ativo FROM cliente WHERE cliente.id = id_cliente;
    IF ativo = 'N' THEN
    BEGIN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CLIENTE INATIVO';
    END;
    END IF;
    INSERT INTO venda (cliente_id) VALUES (id_cliente);
END;
//
DELIMITER ;

-- retornar o nome de um cliente.
DELIMITER //
CREATE FUNCTION get_nome_cliente(codigo_cliente INT) 
RETURNS VARCHAR(150) DETERMINISTIC
BEGIN
	DECLARE nome_cliente VARCHAR(100);
	SELECT nome INTO nome_cliente FROM cliente WHERE id = codigo_cliente;
    RETURN nome_cliente;
END;
//
DELIMITER ;

-- calcular o total de uma venda.
DELIMITER // 
CREATE FUNCTION calcular_total_venda(codigo_venda INT)
RETURNS DECIMAL(8,2) DETERMINISTIC  
BEGIN 
    DECLARE total_venda DECIMAL(8,2); 
    SELECT SUM(item_venda.total) INTO total_venda 
    FROM item_venda
    WHERE venda_id = codigo_venda;
    RETURN total_venda;
END;
//
DELIMITER ;
